>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Test case 1: Divide all elements by 3
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Test case 2: Divide all elements by 2.5
>>> matrix = [
...     [10, 20, 30],
...     [40, 50, 60]
... ]
>>> matrix_divided(matrix, 2.5)
[[4.0, 8.0, 12.0], [16.0, 20.0, 24.0]]

# Test case 3: Divide all elements by -2
>>> matrix = [
...     [-1, -2, -3],
...     [-4, -5, -6]
... ]
>>> matrix_divided(matrix, -2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

# Test case 4: Matrix with a single row
>>> matrix = [[1, 2, 3, 4]]
>>> matrix_divided(matrix, 2)
[[0.5, 1.0, 1.5, 2.0]]

# Test case 5: Matrix with a single column
>>> matrix = [
...     [1],
...     [2],
...     [3]
... ]
>>> matrix_divided(matrix, 2)
[[0.5], [1.0], [1.5]]

# Test case 6: Empty matrix
>>> matrix = []
>>> matrix_divided(matrix, 2)
[]

# Test case 7: Non-numeric divisor
>>> matrix = [
...     [1, 2],
...     [3, 4]
... ]
>>> matrix_divided(matrix, 'a')
Traceback (most recent call last):
    ...
TypeError: div must be a number

# Test case 8: Divisor equal to zero
>>> matrix = [
...     [1, 2],
...     [3, 4]
... ]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Test case 9: Matrix with inconsistent row lengths
>>> matrix = [
...     [1, 2, 3],
...     [4, 5],
...     [6, 7, 8]
... ]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# Test case 10: Matrix with non-numeric elements
>>> matrix = [
...     [1, 'a', 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
